{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/orders/[id]",
      "regex": "^/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/seller/orders/[id]",
      "regex": "^/seller/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/seller/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/seller/services/edit/[id]",
      "regex": "^/seller/services/edit/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/seller/services/edit/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/services/[id]",
      "regex": "^/services/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/services/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/services/[id]/order",
      "regex": "^/services/([^/]+?)/order(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/services/(?<nxtPid>[^/]+?)/order(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/becomeSeller",
      "regex": "^/becomeSeller(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/becomeSeller(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/orders",
      "regex": "^/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/orders(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/seller/add-service",
      "regex": "^/seller/add\\-service(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/add\\-service(?:/)?$"
    },
    {
      "page": "/seller/orders",
      "regex": "^/seller/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/orders(?:/)?$"
    },
    {
      "page": "/seller/profile",
      "regex": "^/seller/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/profile(?:/)?$"
    },
    {
      "page": "/seller/profile/edit",
      "regex": "^/seller/profile/edit(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/profile/edit(?:/)?$"
    },
    {
      "page": "/seller/services",
      "regex": "^/seller/services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/services(?:/)?$"
    },
    {
      "page": "/services",
      "regex": "^/services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}